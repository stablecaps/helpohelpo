# Generated by CodiumAI
import pytest

from helpo.hstrops import norm_key


class TestNormKey:
    # Should return an empty string when given an empty string
    def test_empty_string(self):
        instr = ""
        expected = ""
        assert (
            norm_key(instr) == expected
        ), "Expected an empty string when given an empty string"

    # Should return a normalized string when given a string with spaces, hyphens, and underscores
    def test_string_with_spaces_hyphens_underscores(self):
        instr = "Hello_World-Test"
        expected = "helloworldtest"
        assert (
            norm_key(instr) == expected
        ), "Expected a normalized string when given a string with spaces, hyphens, and underscores"

    # Should return a normalized string when given a string with only spaces, hyphens, and underscores
    def test_string_with_only_spaces_hyphens_underscores(self):
        instr = "   -   _   "
        expected = ""
        assert (
            norm_key(instr) == expected
        ), "Expected a normalized string when given a string with only spaces, hyphens, and underscores"

    # Should return a normalized string when given a string with mixed case characters
    def test_string_with_mixed_case_characters(self):
        instr = "HeLlO_WoRlD"
        expected = "helloworld"
        assert (
            norm_key(instr) == expected
        ), "Expected a normalized string when given a string with mixed case characters"

    # Should return the same string when given a string with no spaces, hyphens, or underscores
    def test_string_with_no_spaces_hyphens_underscores(self):
        instr = "HelloWorldTest"
        expected = "helloworldtest"
        assert (
            norm_key(instr) == expected
        ), "Expected the same string when given a string with no spaces, hyphens, or underscores"

    # Should return the same string when given a string with only one space, hyphen, or underscore
    def test_string_with_one_space_hyphen_underscore(self):
        instr = "Hello World-Test"
        expected = "helloworldtest"
        assert (
            norm_key(instr) == expected
        ), "Expected the same string when given a string with only one space, hyphen, or underscore"

    # Should return a normalized string when given a string with non-ASCII characters
    def test_string_with_non_ascii_characters(self):
        instr = "Héllö_Wörld"
        expected = "héllöwörld"
        assert (
            norm_key(instr) == expected
        ), "Expected a normalized string when given a string with non-ASCII characters"

    # Should return a normalized string when given a string with leading or trailing spaces, hyphens, or underscores
    def test_string_with_leading_trailing_spaces_hyphens_underscores(self):
        instr = "  -Hello_World-Test  "
        expected = "helloworldtest"
        assert (
            norm_key(instr) == expected
        ), "Expected a normalized string when given a string with leading or trailing spaces, hyphens, or underscores"
