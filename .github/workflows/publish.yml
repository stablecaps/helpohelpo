# publish
# https://docs.pypi.org/trusted-publishers/

on:
    push:
      branches:
        - master
    pull_request:

# TODO: insert linting checks & tests
#
jobs:
  build-test:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version: ["3.9"]
    permissions:
      issues: write
      pull-requests: write
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: "poetry"

    - name: Install dependencies
      run: |
        # curl https://deepsource.io/cli | sh
        curl https://deepsource.io/cli > deepsource.sh \
          && chmod u+x deepsource.sh \
          && ./deepsource.sh
        poetry install

    - name: Run tests
      env:
        DEEPSOURCE_DSN_SECRET: ${{ secrets.DEEPSOURCE_DSN_SECRET }}
      run: |
        poetry run pytest -v --cov=helpo --cov-report xml tests/
        export DEEPSOURCE_DSN=$DEEPSOURCE_DSN_SECRET
        ./bin/deepsource report --analyzer test-coverage --key python --value-file "$(pwd)/coverage.xml"


    # https://github.com/MishaKav/pytest-coverage-comment
    - name: Pytest coverage comment
      uses: MishaKav/pytest-coverage-comment@main
      with:
        pytest-xml-coverage-path: ./coverage.xml
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  publish:
    needs: ['build-test']
    if: github.event_name == 'push' && github.ref == 'refs/heads/master' && !contains(github.event.head_commit.message, 'chore(release):')
    name: upload release to PyPI
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version: ["3.9"]
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write
      contents: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install dependencies & build package
        run: |
          curl -sSL https://install.python-poetry.org | python3 -

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "poetry"

      - name: Install dependencies
        run: poetry install

      - name: Prepare package for release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          poetry run semantic-release version
          poetry run semantic-release publish

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1


# https://endjin.com/blog/2023/02/how-to-implement-continuous-deployment-of-python-packages-with-github-actions
# https://ubc-mds.github.io/DSCI_524_collab-sw-dev/materials/lectures/06_lecture-cd-semver-and-docs.html
# https://dev.to/mestrak/semantic-release-with-python-poetry-github-actions-20nn
# https://github.com/Ezard/semantic-prs
# https://michaelheap.com/ultimate-guide-github-actions-authentication/

## Todo:
# 1. add branch protection: https://medium.com/codex/set-up-automatic-testing-2507dfb94cbe
# 2. run tests against merged master?